import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

// Async thunk to fetch movies data from an API
export const fetchMovies = createAsyncThunk('fetch-movies', async (apiUrl) => {
    const response = await fetch(apiUrl);
    return response.json();
});

// Create a slice for movies with initial state and reducers
const moviesSlice = createSlice({
    name: 'movies',
    initialState: { 
        movies: [],
        fetchStatus: '', // To track the status of the fetch request
    },
    reducers: {},
    extraReducers: (builder) => {
        builder
            .addCase(fetchMovies.fulfilled, (state, action) => {
                state.movies = action.payload; // Set movies data on successful fetch
                state.fetchStatus = 'success'; // Update fetch status to success
            })
            .addCase(fetchMovies.pending, (state) => {
                state.fetchStatus = 'loading'; // Update fetch status to loading
            })
            .addCase(fetchMovies.rejected, (state) => {
                state.fetchStatus = 'error'; // Update fetch status to error
            });
    },
});

// Export the reducer generated by the slice
export default moviesSlice.reducer;
